# –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ NEWSbot

## –î–∏–∞–≥—Ä–∞–º–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

```mermaid
graph TD
    User[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] --> Bot[Telegram Bot]
    
    subgraph "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"
        Bot --> CommandHandlers[–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥]
        Bot --> CallbackHandlers[–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback]
        Bot --> MessageHandlers[–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π]
        Bot --> StateHandlers[–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π]
    end
    
    subgraph "–°–µ—Ä–≤–∏—Å—ã"
        CommandHandlers --> ChannelParser[Channel Parser]
        CallbackHandlers --> ChannelParser
        MessageHandlers --> AIService[AI Service]
        StateHandlers --> AIService
        StateHandlers --> ChannelParser
    end
    
    subgraph "–í–Ω–µ—à–Ω–∏–µ API"
        AIService --> G4F[G4F Providers]
        G4F --> GPT4[GPT-4]
        G4F --> Claude[Claude]
        G4F --> Llama[Llama]
        G4F --> GigaChat[GigaChat]
        G4F --> OtherModels[–î—Ä—É–≥–∏–µ –º–æ–¥–µ–ª–∏]
        ChannelParser --> TelegramAPI[Telegram API]
    end
    
    subgraph "–•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö"
        ChannelParser --> ChannelsData[–î–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–æ–≤]
        AIService --> UserSettings[–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]
        Bot --> Prompts[–ü—Ä–æ–º–ø—Ç—ã]
    end
```

## –î–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞

```mermaid
sequenceDiagram
    participant User as –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    participant Bot as Telegram Bot
    participant Parser as Channel Parser
    participant AI as AI Service
    participant G4F as G4F Providers
    
    User->>Bot: –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–Ω–∞–ª–∏–∑–∞
    Bot->>User: –ü–æ–∫–∞–∑ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
    User->>Bot: –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
    Bot->>User: –ó–∞–ø—Ä–æ—Å –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    User->>Bot: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    Bot->>Parser: –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–∞–Ω–∞–ª–æ–≤
    Parser->>Bot: –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    Bot->>AI: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    AI->>G4F: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º
    G4F->>AI: –í–æ–∑–≤—Ä–∞—Ç –æ—Ç–≤–µ—Ç–∞
    AI->>Bot: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
    Bot->>User: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
```

## –î–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞

```mermaid
stateDiagram-v2
    [*] --> Start
    Start --> MainMenu: /start
    
    MainMenu --> CategorySelection: –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    CategorySelection --> ActionSelection: –í—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    ActionSelection --> WaitingForInput: –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
    WaitingForInput --> Processing: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    Processing --> MainMenu: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    
    MainMenu --> ChannelsMenu: "üì∫ –ö–∞–Ω–∞–ª—ã"
    ChannelsMenu --> AddChannel: "‚ûï –î–æ–±–∞–≤–∏—Ç—å"
    ChannelsMenu --> ListChannels: "üìã –°–ø–∏—Å–æ–∫"
    ChannelsMenu --> UpdateChannels: "üîÑ –û–±–Ω–æ–≤–∏—Ç—å"
    ChannelsMenu --> ChannelsStats: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    
    AddChannel --> WaitingForChannel: –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–∏
    WaitingForChannel --> ChannelsMenu: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
    
    UpdateChannels --> WaitingForDays: –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–∏–æ–¥–∞
    WaitingForDays --> ChannelsMenu: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    
    MainMenu --> SettingsMenu: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    SettingsMenu --> ModelSelection: "ü§ñ –ú–æ–¥–µ–ª—å AI"
    SettingsMenu --> EditPrompts: "üìù –ü—Ä–æ–º–ø—Ç—ã"
    SettingsMenu --> About: "‚ÑπÔ∏è –û –±–æ—Ç–µ"
    
    ModelSelection --> SettingsMenu: –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
    
    state Processing {
        [*] --> CollectingData
        CollectingData --> SendingToAI
        SendingToAI --> ProcessingResponse
    }
    
    any --> MainMenu: /cancel
```

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö

```mermaid
classDiagram
    class User {
        +int user_id
        +dict settings
        +str selected_model
        +datetime setup_date
    }
    
    class Channel {
        +int channel_id
        +str title
        +str link
        +datetime last_parsed
        +int total_messages
    }
    
    class Message {
        +int message_id
        +str text
        +datetime date
        +int views
        +int forwards
    }
    
    class Prompt {
        +str category
        +str action
        +str text
    }
    
    class AIProvider {
        +str name
        +list[str] models
        +bool working
    }
    
    User "1" -- "many" Channel : monitors
    Channel "1" -- "many" Message : contains
    User "1" -- "1" AIProvider : uses
    AIProvider "1" -- "many" Prompt : processes
``` 